using  ApproxOperator, JuMP, Ipopt, CairoMakie

model = Model(Ipopt.Optimizer)

include("import_Scordelis_Lo_roof.jl")

ndiv= 11
elements,nodes = import_roof_Tri3("./msh/bar_"*string(ndiv)*".msh")
n‚Çö = length(nodes)

setùù≠!(elements["Œ©"])
set‚àáùù≠!(elements["Œ©"])
setùù≠!(elements["Œì·µç"])
setùù≠!(elements["Œì·µó"])

# k·∂ú = 100.0
# m = 1.0
# qÃá‚ÇÄ = 5.0
# q‚ÇÄ = 1.0
œÅ = 1.0
A = 100.0
E = 3e6
EA = E*A
# prescribe!(elements["Œì·µó"],:P=>(x,y,z)->1.0)
# prescribe!(elements["Œ©"],:b=>(x,y,z)->0.0)

# fig = Figure()
# Axis(fig[1, 1])
# ùë° = 0.0:0.01:1.0
# ùúî = (k·∂ú/m)^0.5
# ùë• = q‚ÇÄ.*cos.(ùúî.*ùë°) + qÃá‚ÇÄ/ùúî.*sin.(ùúî.*ùë°)
# lines!(ùë°, ùë•, color = :black)


ops = [
       Operator{:‚à´‚à´qÃámpqkpdx}(:œÅ=>œÅ,:A=>A,:EA=>EA),
]

k = zeros(n‚Çö,n‚Çö)
f = zeros(n‚Çö)

ops[1](elements["Œ©"],k,f)
# ops[2](elements["Œì·µç"],k,f)

Œ± = 1e9
kŒ± = zeros(n‚Çö,n‚Çö)
fŒ± = zeros(n‚Çö)
kŒ±[1,1] += Œ±
fŒ±[1] += Œ±*q‚ÇÄ
kŒ≤ = zeros(n‚Çö,n‚Çö)
kŒ≤[n‚Çö,n‚Çö] += Œ±

d = [k+kŒ± k;k kŒ≤]\[f+fŒ±;f]
Œ¥d = d[n‚Çö+1:end]
d = d[1:n‚Çö]


lines!(nodes.x[[1,3:end...,2]], d, color = :blue)


fig